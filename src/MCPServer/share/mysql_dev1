-- Issue 5084
-- If user restarts while waiting to choose compression algorithm, the SIP job is orphaned
-- Tail of chain = Prepare AIP = 3e25bda6-5314-4bb4-aa1e-90900dce887d
-- Start of new chain = Select Compression algorithm = 01d64f58-8295-4b7b-9cab-8f1b153a504f

-- add  move after prepare AIP

SET @microserviceGroup = 'Prepare AIP';
SET @MoveSIPToFailedLink = '7d728c39-395f-4892-8193-92f086c0546f';
SET @MoveTransferToFailedLink = '61c316a6-0a50-4f65-8767-1f44b1eeb6dd';


SET @XLink = '3e25bda6-5314-4bb4-aa1e-90900dce887d';
-- SET @YLink = '1cd3b36a-5252-4a69-9b1c-3b36829288ab';

SET @TasksConfigPKReference = 'ae090b70-0234-40ea-bc11-4be27370515f';
SET @TasksConfig = '18dceb0a-dfb1-4b18-81a7-c6c5c578c5f1';
SET @MicroServiceChainLink = '002716a1-ae29-4f36-98ab-0d97192669c4';
SET @MicroServiceChainLinksExitCodes = '2858403b-895f-4ea3-b7b7-388de75fbb39';
SET @defaultNextChainLink = @MoveSIPToFailedLink;
SET @NextMicroServiceChainLink = NULL;

INSERT INTO StandardTasksConfigs (pk, filterFileEnd, filterFileStart, filterSubDir, requiresOutputLock, standardOutputFile, standardErrorFile, execute, arguments)
    VALUES (@TasksConfigPKReference, NULL, NULL, NULL, FALSE, NULL, NULL, 'moveSIP_v0.0', '"%SIPDirectory%" "%watchDirectoryPath%workFlowDecisions/compressionAIPDecisions/." "%SIPUUID%" "%sharedPath%"');
INSERT INTO TasksConfigs (pk, taskType, taskTypePKReference, description)
    VALUES
    (@TasksConfig, '36b2e239-4a57-4aa5-8ebc-7a29139baca6', @TasksConfigPKReference, 'Move to compressionAIPDecisions directory');
INSERT INTO MicroServiceChainLinks (pk, microserviceGroup, currentTask, defaultNextChainLink)
    VALUES (@MicroServiceChainLink, @microserviceGroup, @TasksConfig, @defaultNextChainLink);
INSERT INTO MicroServiceChainLinksExitCodes (pk, microServiceChainLink, exitCode, nextMicroServiceChainLink)
    VALUES (@MicroServiceChainLinksExitCodes, @MicroServiceChainLink, 0, @NextMicroServiceChainLink);
SET @NextMicroServiceChainLink = @MicroServiceChainLink;

-- set non zero exit code --
UPDATE MicroServiceChainLinks SET defaultNextChainLink = @MoveSIPToFailedLink WHERE pk = @XLink;

-- set zero exit code --
UPDATE MicroServiceChainLinksExitCodes SET nextMicroServiceChainLink = @NextMicroServiceChainLink where microServiceChainLink = @XLink;


-- Add new watched directory for compressionAIP decisions, and chain for it to point to
SET @WatchedDirectory = 'dfb22984-c6eb-4c5d-939c-0df43559033e';
SET @MicroServiceChains = '27cf6ca9-11b4-41ac-9014-f8018bcbad5e';

INSERT INTO MicroServiceChains (pk, startingLink, description)
    VALUES (@MicroServiceChains, '01d64f58-8295-4b7b-9cab-8f1b153a504f', 'Compress AIP');

INSERT INTO WatchedDirectories (pk, watchedDirectoryPath, chain, onlyActOnDirectories, expectedType)
    VALUES (@WatchedDirectory, '%watchDirectoryPath%workFlowDecisions/compressionAIPDecisions/', @MicroServiceChains, True, '76e66677-40e6-41da-be15-709afb334936');

-- /Issue 5084

-- issue-1843
-- --------------------------------------------------------------------------------------------------------------------------
-- Add ability to generate a DIP from an AIP.
-- -Normalization tool selection without fits already having been run


-- extension
-- extension ID run
SET @TasksConfig = '59fc6d9e-a648-443f-93f3-7f172f8e85a7';
SET @MicroServiceChainLink = '';
SET @MicroServiceChainLinksExitCodes = '';
SET @defaultNextChainLink = '83484326-7be7-4f9f-b252-94553cd42370';
SET @NextMicroServiceChainLink = '83484326-7be7-4f9f-b252-94553cd42370';

INSERT INTO MicroServiceChainLinks (pk, microserviceGroup, currentTask, defaultNextChainLink)
    VALUES (@MicroServiceChainLink, @microserviceGroup, @TasksConfig, @defaultNextChainLink);
INSERT INTO MicroServiceChainLinksExitCodes (pk, microServiceChainLink, exitCode, nextMicroServiceChainLink)
    VALUES (@MicroServiceChainLinksExitCodes, @MicroServiceChainLink, 0, @NextMicroServiceChainLink);
SET @NextMicroServiceChainLink = @MicroServiceChainLink;

-- extension set
SET @TasksConfig = '04806cbd-d146-46e9-b3b6-1bd664636057';
SET @MicroServiceChainLink = '';
SET @MicroServiceChainLinksExitCodes = '';
SET @defaultNextChainLink = @RunFITSLink;
INSERT INTO MicroServiceChainLinks (pk, microserviceGroup, currentTask, defaultNextChainLink)
    VALUES (@MicroServiceChainLink, @microserviceGroup, @TasksConfig, @defaultNextChainLink);
INSERT INTO MicroServiceChainLinksExitCodes (pk, microServiceChainLink, exitCode, nextMicroServiceChainLink)
    VALUES (@MicroServiceChainLinksExitCodes, @MicroServiceChainLink, 0, @NextMicroServiceChainLink);
SET @NextMicroServiceChainLink = @MicroServiceChainLink;

SET @MicroServiceChains = '';
SET @startingLink = @MicroServiceChainLink;
SET @description = 'extension (default)';
INSERT INTO MicroServiceChains (pk, startingLink, description)
    VALUES (@MicroServiceChains, @startingLink, @description);
SET @ExtensionChain = @MicroServiceChains;


--taskConfig run fits b8403044-12a3-4b63-8399-772b9adace15
--Run FITS
SET @TasksConfig = 'b8403044-12a3-4b63-8399-772b9adace15';
SET @MicroServiceChainLink = '';
SET @MicroServiceChainLinksExitCodes = '';
SET @defaultNextChainLink = '83484326-7be7-4f9f-b252-94553cd42370';
SET @NextMicroServiceChainLink = '83484326-7be7-4f9f-b252-94553cd42370';

INSERT INTO MicroServiceChainLinks (pk, microserviceGroup, currentTask, defaultNextChainLink)
    VALUES (@MicroServiceChainLink, @microserviceGroup, @TasksConfig, @defaultNextChainLink);
INSERT INTO MicroServiceChainLinksExitCodes (pk, microServiceChainLink, exitCode, nextMicroServiceChainLink)
    VALUES (@MicroServiceChainLinksExitCodes, @MicroServiceChainLink, 0, @NextMicroServiceChainLink);
SET @NextMicroServiceChainLink = @MicroServiceChainLink;
SET @RunFITSLink = @MicroServiceChainLink;

-- FITS DROID
SET @TasksConfig = 'b8c10f19-40c9-44c8-8b9f-6fab668513f5';
SET @MicroServiceChainLink = '';
SET @MicroServiceChainLinksExitCodes = '';
SET @defaultNextChainLink = @RunFITSLink;
SET @NextMicroServiceChainLink = @RunFITSLink;

INSERT INTO MicroServiceChainLinks (pk, microserviceGroup, currentTask, defaultNextChainLink)
    VALUES (@MicroServiceChainLink, @microserviceGroup, @TasksConfig, @defaultNextChainLink);
INSERT INTO MicroServiceChainLinksExitCodes (pk, microServiceChainLink, exitCode, nextMicroServiceChainLink)
    VALUES (@MicroServiceChainLinksExitCodes, @MicroServiceChainLink, 0, @NextMicroServiceChainLink);
SET @NextMicroServiceChainLink = @MicroServiceChainLink;
SET @RunFITSLink = @MicroServiceChainLink;

SET @MicroServiceChains = '';
SET @startingLink = @MicroServiceChainLink;
SET @description = '';
INSERT INTO MicroServiceChains (pk, startingLink, description)
    VALUES (@MicroServiceChains, @startingLink, @description);
SET @FITSDROIDChain = @MicroServiceChains;

-- FITS - ffident
SET @TasksConfig = 'b5e6340f-07f3-4ed1-aada-7a7f049b19b9';
SET @MicroServiceChainLink = '';
SET @MicroServiceChainLinksExitCodes = '';
SET @defaultNextChainLink = @RunFITSLink;
SET @NextMicroServiceChainLink = @RunFITSLink;

INSERT INTO MicroServiceChainLinks (pk, microserviceGroup, currentTask, defaultNextChainLink)
    VALUES (@MicroServiceChainLink, @microserviceGroup, @TasksConfig, @defaultNextChainLink);
INSERT INTO MicroServiceChainLinksExitCodes (pk, microServiceChainLink, exitCode, nextMicroServiceChainLink)
    VALUES (@MicroServiceChainLinksExitCodes, @MicroServiceChainLink, 0, @NextMicroServiceChainLink);
SET @NextMicroServiceChainLink = @MicroServiceChainLink;
SET @RunFITSLink = @MicroServiceChainLink;

SET @MicroServiceChains = '';
SET @startingLink = @MicroServiceChainLink;
SET @description = '';
INSERT INTO MicroServiceChains (pk, startingLink, description)
    VALUES (@MicroServiceChains, @startingLink, @description);
SET @FITSffidentChain = @MicroServiceChains;

-- FITS - JHOVE
SET @TasksConfig = '76135f22-6dba-417f-9833-89ecbe9a3d99';
SET @MicroServiceChainLink = '';
SET @MicroServiceChainLinksExitCodes = '';
SET @defaultNextChainLink = @RunFITSLink;
SET @NextMicroServiceChainLink = @RunFITSLink;

INSERT INTO MicroServiceChainLinks (pk, microserviceGroup, currentTask, defaultNextChainLink)
    VALUES (@MicroServiceChainLink, @microserviceGroup, @TasksConfig, @defaultNextChainLink);
INSERT INTO MicroServiceChainLinksExitCodes (pk, microServiceChainLink, exitCode, nextMicroServiceChainLink)
    VALUES (@MicroServiceChainLinksExitCodes, @MicroServiceChainLink, 0, @NextMicroServiceChainLink);
SET @NextMicroServiceChainLink = @MicroServiceChainLink;
SET @RunFITSLink = @MicroServiceChainLink;

SET @MicroServiceChains = '';
SET @startingLink = @MicroServiceChainLink;
SET @description = '';
INSERT INTO MicroServiceChains (pk, startingLink, description)
    VALUES (@MicroServiceChains, @startingLink, @description);
SET @FITSJHOVEChain = @MicroServiceChains;

-- FITS - summary 
SET @TasksConfig = 'c87ec738-b679-4d8e-8324-73038ccf0dfd';
SET @MicroServiceChainLink = '';
SET @MicroServiceChainLinksExitCodes = '';
SET @defaultNextChainLink = @RunFITSLink;
SET @NextMicroServiceChainLink = @RunFITSLink;

INSERT INTO MicroServiceChainLinks (pk, microserviceGroup, currentTask, defaultNextChainLink)
    VALUES (@MicroServiceChainLink, @microserviceGroup, @TasksConfig, @defaultNextChainLink);
INSERT INTO MicroServiceChainLinksExitCodes (pk, microServiceChainLink, exitCode, nextMicroServiceChainLink)
    VALUES (@MicroServiceChainLinksExitCodes, @MicroServiceChainLink, 0, @NextMicroServiceChainLink);
SET @NextMicroServiceChainLink = @MicroServiceChainLink;
SET @RunFITSLink = @MicroServiceChainLink;

SET @MicroServiceChains = '';
SET @startingLink = @MicroServiceChainLink;
SET @description = '';
INSERT INTO MicroServiceChains (pk, startingLink, description)
    VALUES (@MicroServiceChains, @startingLink, @description);
SET @FITSSummaryChain = @MicroServiceChains;

-- FITS - file utility
SET @TasksConfig = '0732af8f-d60b-43e0-8f75-8e89039a05a8';
SET @MicroServiceChainLink = '';
SET @MicroServiceChainLinksExitCodes = '';
SET @defaultNextChainLink = @RunFITSLink;
SET @NextMicroServiceChainLink = @RunFITSLink;


INSERT INTO MicroServiceChainLinks (pk, microserviceGroup, currentTask, defaultNextChainLink)
    VALUES (@MicroServiceChainLink, @microserviceGroup, @TasksConfig, @defaultNextChainLink);
INSERT INTO MicroServiceChainLinksExitCodes (pk, microServiceChainLink, exitCode, nextMicroServiceChainLink)
    VALUES (@MicroServiceChainLinksExitCodes, @MicroServiceChainLink, 0, @NextMicroServiceChainLink);
SET @NextMicroServiceChainLink = @MicroServiceChainLink;
SET @RunFITSLink = @MicroServiceChainLink;

SET @MicroServiceChains = '';
SET @startingLink = @MicroServiceChainLink;
SET @description = 'FITS - file utility';
INSERT INTO MicroServiceChains (pk, startingLink, description)
    VALUES (@MicroServiceChains, @startingLink, @description);
SET @FITSFileUtilityChain = @MicroServiceChains;




-- Choose tool
@MicroServiceChains
SET @TasksConfigPKReference = NULL;
SET @TasksConfig = '';
SET @MicroServiceChainLink = '';
SET @MicroServiceChainLinksExitCodes = '';
SET @defaultNextChainLink = @NextMicroServiceChainLink;
SET @rejectTransferMicroserviceChain = '1b04ec43-055c-43b7-9543-bd03c6a778ba';

INSERT INTO TasksConfigs (pk, taskType, taskTypePKReference, description)
    VALUES
    (@TasksConfig, '61fb3874-8ef6-49d3-8a2d-3cb66e86a30c', @TasksConfigPKReference, 'Select format identification tool');
INSERT INTO MicroServiceChainLinks (pk, microserviceGroup, currentTask, defaultNextChainLink)
    VALUES (@MicroServiceChainLink, @microserviceGroup, @TasksConfig, @defaultNextChainLink);
-- FIDO
SET @MicroServiceChainChoice = '';
SET @chainAvailable = 'c76624a8-6f85-43cf-8ea7-0663502c712f';
INSERT INTO MicroServiceChainChoice (pk, choiceAvailableAtLink, chainAvailable)
    VALUES                
    (@MicroServiceChainChoice, @MicroServiceChainLink, @chainAvailable);
-- MediaInfo
SET @MicroServiceChainChoice = '';
SET @chainAvailable = '09949bda-5332-482a-ae47-5373bd372174';
INSERT INTO MicroServiceChainChoice (pk, choiceAvailableAtLink, chainAvailable)
    VALUES                
    (@MicroServiceChainChoice, @MicroServiceChainLink, @chainAvailable);
-- Tika
SET @MicroServiceChainChoice = '';
SET @chainAvailable = '46824987-bd47-4139-9871-6566f5abdf1a';
INSERT INTO MicroServiceChainChoice (pk, choiceAvailableAtLink, chainAvailable)
    VALUES                
    (@MicroServiceChainChoice, @MicroServiceChainLink, @chainAvailable);
-- FITS DROID
SET @MicroServiceChainChoice = '';
SET @chainAvailable = @FITSDROIDChain;
INSERT INTO MicroServiceChainChoice (pk, choiceAvailableAtLink, chainAvailable)
    VALUES                
    (@MicroServiceChainChoice, @MicroServiceChainLink, @chainAvailable);
-- FITS - ffident
SET @MicroServiceChainChoice = '';
SET @chainAvailable = @FITSffidentChain;
INSERT INTO MicroServiceChainChoice (pk, choiceAvailableAtLink, chainAvailable)
    VALUES                
    (@MicroServiceChainChoice, @MicroServiceChainLink, @chainAvailable);
-- FITS - JHOVE
SET @MicroServiceChainChoice = '';
SET @chainAvailable = @FITSJHOVEChain;
INSERT INTO MicroServiceChainChoice (pk, choiceAvailableAtLink, chainAvailable)
    VALUES                
    (@MicroServiceChainChoice, @MicroServiceChainLink, @chainAvailable);
-- FITS - summary
SET @MicroServiceChainChoice = '';
SET @chainAvailable = @FITSSummaryChain;
INSERT INTO MicroServiceChainChoice (pk, choiceAvailableAtLink, chainAvailable)
    VALUES                
    (@MicroServiceChainChoice, @MicroServiceChainLink, @chainAvailable);
-- FITS - file utility
SET @MicroServiceChainChoice = '';
SET @chainAvailable = @FITSFileUtilityChain;
INSERT INTO MicroServiceChainChoice (pk, choiceAvailableAtLink, chainAvailable)
    VALUES                
    (@MicroServiceChainChoice, @MicroServiceChainLink, @chainAvailable);
-- Extension
SET @MicroServiceChainChoice = '';
SET @chainAvailable = @ExtensionChain;
INSERT INTO MicroServiceChainChoice (pk, choiceAvailableAtLink, chainAvailable)
    VALUES                
    (@MicroServiceChainChoice, @MicroServiceChainLink, @chainAvailable);

set @NextMicroServiceChainLink = @MicroServiceChainLink;
INSERT INTO MicroServiceChains (pk, startingLink, description)
    VALUES (@MicroServiceChains, '01d64f58-8295-4b7b-9cab-8f1b153a504f', 'Select file id type - without existing fits/fileIDbyExt');

INSERT INTO WatchedDirectories (pk, watchedDirectoryPath, chain, onlyActOnDirectories, expectedType)
    VALUES (@WatchedDirectory, '%watchDirectoryPath%workFlowDecisions/selectFileIDTool/', @MicroServiceChains, True, '76e66677-40e6-41da-be15-709afb334936');

-- -/Normalization tool selection without fits already having been run

CREATE TABLE `FauxFileIDsMap` (
  `pk` int(11) NOT NULL AUTO_INCREMENT,
  `fauxFileUUID` varchar(50) DEFAULT NULL,
  `fileUUID` varchar(50) DEFAULT NULL,
  CONSTRAINT `FilesIDs_ibfk_1` FOREIGN KEY (`fileUUID`) REFERENCES `Files` (`fileUUID`)
  CONSTRAINT `FilesIDs_ibfk_2` FOREIGN KEY (`fauxFileUUID`) REFERENCES `Files` (`fileUUID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- --------------------------------------------------------------------------------------------------------------------------
-- Add ability to generate a DIP from an AIP.
-- Normalize from service or original, approve normalizaiton
--- <alter old workflows>
SET @microserviceGroup = 'Normalize';

SET @XLink = '';
SET @YLink = '0b5ad647-5092-41ce-9fe5-1cc376d0bc3f';

SET @TasksConfigPKReference = '';
SET @TasksConfig = '';
SET @MicroServiceChainLink = '';
SET @MicroServiceChainLinksExitCodes = '';
SET @defaultNextChainLink = @MoveSIPToFailedLink;
SET @NextMicroServiceChainLink = @YLink;

INSERT INTO TasksConfigsUnitVariableLinkPull (pk, variable, variableValue, defaultMicroServiceChainLink)
    VALUES (@TasksConfigPKReference, 'postApproveNormalizationLink', @YLink);
INSERT INTO TasksConfigs (pk, taskType, taskTypePKReference, description)
    VALUES
    (@TasksConfig, '36b2e239-4a57-4aa5-8ebc-7a29139baca6', @TasksConfigPKReference, 'Load post approve normalization link');
INSERT INTO MicroServiceChainLinks (pk, microserviceGroup, currentTask, defaultNextChainLink)
    VALUES (@MicroServiceChainLink, @microserviceGroup, @TasksConfig, @defaultNextChainLink);
INSERT INTO MicroServiceChainLinksExitCodes (pk, microServiceChainLink, exitCode, nextMicroServiceChainLink)
    VALUES (@MicroServiceChainLinksExitCodes, @MicroServiceChainLink, 0, @NextMicroServiceChainLink);
SET @NextMicroServiceChainLink = @MicroServiceChainLink;

-- set non zero exit code --
-- UPDATE MicroServiceChainLinks SET defaultNextChainLink = @MoveSIPToFailedLink WHERE pk = @XLink;

-- set zero exit code --
-- UPDATE MicroServiceChainLinksExitCodes SET nextMicroServiceChainLink = @NextMicroServiceChainLink where microServiceChainLink = @XLink;

UPDATE MicroServiceChains SET startingLink = @MicroServiceChainLink WHERE startingLink = @YLink;


SET @XLink = '';
SET @YLink = 'b443ba1a-a0b6-4f7c-aeb2-65bd83de5e8b';

SET @TasksConfigPKReference = '';
SET @TasksConfig = '';
SET @MicroServiceChainLink = '';
SET @MicroServiceChainLinksExitCodes = '';
SET @defaultNextChainLink = @MoveSIPToFailedLink;
SET @NextMicroServiceChainLink = @YLink;

INSERT INTO TasksConfigsUnitVariableLinkPull (pk, variable, variableValue, defaultMicroServiceChainLink)
    VALUES (@TasksConfigPKReference, 'postApproveNormalizationLink', @YLink);
INSERT INTO TasksConfigs (pk, taskType, taskTypePKReference, description)
    VALUES
    (@TasksConfig, '36b2e239-4a57-4aa5-8ebc-7a29139baca6', @TasksConfigPKReference, 'Load post approve normalization link');
INSERT INTO MicroServiceChainLinks (pk, microserviceGroup, currentTask, defaultNextChainLink)
    VALUES (@MicroServiceChainLink, @microserviceGroup, @TasksConfig, @defaultNextChainLink);
INSERT INTO MicroServiceChainLinksExitCodes (pk, microServiceChainLink, exitCode, nextMicroServiceChainLink)
    VALUES (@MicroServiceChainLinksExitCodes, @MicroServiceChainLink, 0, @NextMicroServiceChainLink);
SET @NextMicroServiceChainLink = @MicroServiceChainLink;

-- set non zero exit code --
-- UPDATE MicroServiceChainLinks SET defaultNextChainLink = @MoveSIPToFailedLink WHERE pk = @XLink;

-- set zero exit code --
-- UPDATE MicroServiceChainLinksExitCodes SET nextMicroServiceChainLink = @NextMicroServiceChainLink where microServiceChainLink = @XLink;

UPDATE MicroServiceChains SET startingLink = @MicroServiceChainLink WHERE startingLink = @YLink;

--- </alter old workflows>
--- create new ones

--ab0d38 load finished with manual normalized link.


@MicroServiceChains
SET @TasksConfigPKReference = NULL;
SET @TasksConfig = '';
SET @MicroServiceChainLink = '';
SET @MicroServiceChainLinksExitCodes = '';
SET @defaultNextChainLink = @NextMicroServiceChainLink;
SET @rejectTransferMicroserviceChain = '1b04ec43-055c-43b7-9543-bd03c6a778ba';

INSERT INTO TasksConfigs (pk, taskType, taskTypePKReference, description)
    VALUES
    (@TasksConfig, '61fb3874-8ef6-49d3-8a2d-3cb66e86a30c', @TasksConfigPKReference, 'Select format identification tool');
INSERT INTO MicroServiceChainLinks (pk, microserviceGroup, currentTask, defaultNextChainLink)
    VALUES (@MicroServiceChainLink, @microserviceGroup, @TasksConfig, @defaultNextChainLink);

/*
mysql> select * FROM MicroServiceChains where startingLink like '632%';
+--------------------------------------+--------------------------------------+----------------------+----------+---------------------+
| pk                                   | startingLink                         | description          | replaces | lastModified        |
+--------------------------------------+--------------------------------------+----------------------+----------+---------------------+
| fb7a326e-1e50-4b48-91b9-4917ff8d0ae8 | 6327fdf9-9673-42a8-ace5-cccad005818b | Normalize for access | NULL     | 2012-10-01 17:25:08 |
+--------------------------------------+--------------------------------------+----------------------+----------+---------------------+
1 row in set (0.01 sec)

mysql> select * FROM MicroServiceChains where startingLink like 'b20%';
+--------------------------------------+--------------------------------------+------------------------------------+----------+---------------------+
| pk                                   | startingLink                         | description                        | replaces | lastModified        |
+--------------------------------------+--------------------------------------+------------------------------------+----------+---------------------+
| e600b56d-1a43-4031-9d7c-f64f123e5662 | b20ff203-1472-40db-b879-0e59d17de867 | Normalize service files for access | NULL     | 2012-10-01 17:25:08 |
+--------------------------------------+--------------------------------------+------------------------------------+----------+---------------------+
1 row in set (0.00 sec)

mysql> select * FROM MicroServiceChains where startingLink like '31abe%';
+--------------------------------------+--------------------------------------+--------------------+----------+---------------------+
| pk                                   | startingLink                         | description        | replaces | lastModified        |
+--------------------------------------+--------------------------------------+--------------------+----------+---------------------+
| c34bd22a-d077-4180-bf58-01db35bdb644 | 31abe664-745e-4fef-a669-ff41514e0083 | Normalize manually | NULL     | 2013-01-04 17:09:13 |
+--------------------------------------+--------------------------------------+--------------------+----------+---------------------+
1 row in set (0.00 sec)
*/



-- FITS - file utility
SET @MicroServiceChainChoice = '';
SET @chainAvailable = @FITSFileUtilityChain;
INSERT INTO MicroServiceChainChoice (pk, choiceAvailableAtLink, chainAvailable)
    VALUES                
    (@MicroServiceChainChoice, @MicroServiceChainLink, @chainAvailable);
-- Extension
SET @MicroServiceChainChoice = '';
SET @chainAvailable = @ExtensionChain;
INSERT INTO MicroServiceChainChoice (pk, choiceAvailableAtLink, chainAvailable)
    VALUES                
    (@MicroServiceChainChoice, @MicroServiceChainLink, @chainAvailable);

set @NextMicroServiceChainLink = @MicroServiceChainLink;
INSERT INTO MicroServiceChains (pk, startingLink, description)
    VALUES (@MicroServiceChains, '01d64f58-8295-4b7b-9cab-8f1b153a504f', 'Select file id type - without existing fits/fileIDbyExt');

INSERT INTO WatchedDirectories (pk, watchedDirectoryPath, chain, onlyActOnDirectories, expectedType)
    VALUES (@WatchedDirectory, '%watchDirectoryPath%workFlowDecisions/selectFileIDTool/', @MicroServiceChains, True, '76e66677-40e6-41da-be15-709afb334936');
    

    

-- --------------------------------------------------------------------------------------------------------------------------

-- generate dip Strip faux sipUUID

-- copy mets to dip

-- unfaux dip File UUIDs

-- manual normalization

-- approve normalization

-- Normalize thumbnails & access

-- Select original/service

-- Select original/service WD

-- Create DIP directory


-- Move to normalize access from original/service decision
SET @TasksConfig = '';
SET @TasksConfigPKReference = '';
SET @MicroServiceChainLink = '';
SET @MicroServiceChainLinksExitCodes = '';
SET @defaultNextChainLink = @MoveTransferToFailedLink;

INSERT INTO StandardTasksConfigs (pk, filterFileEnd, filterFileStart, filterSubDir, requiresOutputLock, standardOutputFile, standardErrorFile, execute, arguments)
    VALUES (@TasksConfigPKReference, NULL, NULL, NULL, FALSE, NULL, NULL, 'moveSIP_v0.0','\"%SIPDirectory%\" \"%sharedPath%watchedDirectories/workFlowDecisions/selectNormalizationPath/.\" \"%SIPUUID%\" \"%sharedPath%\"');
INSERT INTO TasksConfigs (pk, taskType, taskTypePKReference, description)
    VALUES
    (@TasksConfig, '36b2e239-4a57-4aa5-8ebc-7a29139baca6', @TasksConfigPKReference, 'Assign file UUIDs');
INSERT INTO MicroServiceChainLinks (pk, microserviceGroup, currentTask, defaultNextChainLink)
    VALUES (@MicroServiceChainLink, @microserviceGroup, @TasksConfig, @defaultNextChainLink);
INSERT INTO MicroServiceChainLinksExitCodes (pk, microServiceChainLink, exitCode, nextMicroServiceChainLink)
    VALUES (@MicroServiceChainLinksExitCodes, @MicroServiceChainLink, 0, @NextMicroServiceChainLink);
SET @NextMicroServiceChainLink2 = @MicroServiceChainLink;


-- Set 'postApproveNormalizationLink'
set to '0f0c1f33-29f2-49ae-b413-3e043da5df61'

-- SET 'returnFromManualNormalized'
-- #set to CREATE DIP

-- Move to Select & run file id tool
SET @TasksConfig = '';
SET @TasksConfigPKReference = '';
SET @MicroServiceChainLink = '';
SET @MicroServiceChainLinksExitCodes = '';
SET @defaultNextChainLink = @MoveTransferToFailedLink;

INSERT INTO StandardTasksConfigs (pk, filterFileEnd, filterFileStart, filterSubDir, requiresOutputLock, standardOutputFile, standardErrorFile, execute, arguments)
    VALUES (@TasksConfigPKReference, NULL, NULL, NULL, FALSE, NULL, NULL, 'moveSIP_v0.0','\"%SIPDirectory%\" \"%sharedPath%watchedDirectories/workFlowDecisions/selectFileIDTool/.\" \"%SIPUUID%\" \"%sharedPath%\"');
INSERT INTO TasksConfigs (pk, taskType, taskTypePKReference, description)
    VALUES
    (@TasksConfig, '36b2e239-4a57-4aa5-8ebc-7a29139baca6', @TasksConfigPKReference, 'Assign file UUIDs');
INSERT INTO MicroServiceChainLinks (pk, microserviceGroup, currentTask, defaultNextChainLink)
    VALUES (@MicroServiceChainLink, @microserviceGroup, @TasksConfig, @defaultNextChainLink);
INSERT INTO MicroServiceChainLinksExitCodes (pk, microServiceChainLink, exitCode, nextMicroServiceChainLink)
    VALUES (@MicroServiceChainLinksExitCodes, @MicroServiceChainLink, 0, @NextMicroServiceChainLink);
SET @NextMicroServiceChainLink = @MicroServiceChainLink;



-- SET resumeAfterNormalizationFileIdentificationToolSelected
SET @TasksConfig = '';
SET @TasksConfigPKReference = '';
SET @MicroServiceChainLink = '';
SET @MicroServiceChainLinksExitCodes = '';
SET @defaultNextChainLink = @MoveTransferToFailedLink;
INSERT INTO TasksConfigsSetUnitVariable (pk, variable, microServiceChainLink)
    VALUES (@TasksConfigPKReference, 'resumeAfterNormalizationFileIdentificationToolSelected', @NextMicroServiceChainLink2);
INSERT INTO TasksConfigs (pk, taskType, taskTypePKReference, description)
    VALUES
    (@TasksConfig, '6f0b612c-867f-4dfd-8e43-5b35b7f882d7', @TasksConfigPKReference, 'Set resume link');
INSERT INTO MicroServiceChainLinks (pk, microserviceGroup, currentTask, defaultNextChainLink)
    VALUES (@MicroServiceChainLink, @microserviceGroup, @TasksConfig, @defaultNextChainLink);
INSERT INTO MicroServiceChainLinksExitCodes (pk, microServiceChainLink, exitCode, nextMicroServiceChainLink)
    VALUES (@MicroServiceChainLinksExitCodes, @MicroServiceChainLink, 0, @NextMicroServiceChainLink);
SET @NextMicroServiceChainLink2 = @MicroServiceChainLink;

-- set maildir FileIDs
SET @TasksConfig = '';
SET @TasksConfigPKReference = '';
SET @MicroServiceChainLink = '';
SET @MicroServiceChainLinksExitCodes = '';
SET @defaultNextChainLink = @MoveTransferToFailedLink;

INSERT INTO StandardTasksConfigs (pk, filterFileEnd, filterFileStart, filterSubDir, requiresOutputLock, standardOutputFile, standardErrorFile, execute, arguments)
    VALUES (@TasksConfigPKReference, NULL, NULL, NULL, FALSE, NULL, NULL, 'assignFauxFileUUIDs_v0.0', '"%SIPUUID%" "TRIM"');
INSERT INTO TasksConfigs (pk, taskType, taskTypePKReference, description)
    VALUES
    (@TasksConfig, '36b2e239-4a57-4aa5-8ebc-7a29139baca6', @TasksConfigPKReference, 'Assign file UUIDs');
INSERT INTO MicroServiceChainLinks (pk, microserviceGroup, currentTask, defaultNextChainLink)
    VALUES (@MicroServiceChainLink, @microserviceGroup, @TasksConfig, @defaultNextChainLink);
INSERT INTO MicroServiceChainLinksExitCodes (pk, microServiceChainLink, exitCode, nextMicroServiceChainLink)
    VALUES (@MicroServiceChainLinksExitCodes, @MicroServiceChainLink, 0, @NextMicroServiceChainLink);
SET @NextMicroServiceChainLink = @MicroServiceChainLink;


-- Is maildir AIP--
SET @TasksConfig = '';
SET @TasksConfigPKReference = '';
SET @MicroServiceChainLink = '';
SET @MicroServiceChainLinksExitCodes = '';
SET @defaultNextChainLink = @MoveTransferToFailedLink;

INSERT INTO StandardTasksConfigs (pk, filterFileEnd, filterFileStart, filterSubDir, requiresOutputLock, standardOutputFile, standardErrorFile, execute, arguments)
    VALUES (@TasksConfigPKReference, NULL, NULL, NULL, FALSE, NULL, NULL, 'archivematicaSetTransferType_v0.0', '"%SIPUUID%" "TRIM"');
INSERT INTO TasksConfigs (pk, taskType, taskTypePKReference, description)
    VALUES
    (@TasksConfig, '36b2e239-4a57-4aa5-8ebc-7a29139baca6', @TasksConfigPKReference, 'Determin processing path for this AIP version.');
INSERT INTO MicroServiceChainLinks (pk, microserviceGroup, currentTask, defaultNextChainLink)
    VALUES (@MicroServiceChainLink, @microserviceGroup, @TasksConfig, @defaultNextChainLink);
INSERT INTO MicroServiceChainLinksExitCodes (pk, microServiceChainLink, exitCode, nextMicroServiceChainLink)
    VALUES (@MicroServiceChainLinksExitCodes, @MicroServiceChainLink, 179, @NextMicroServiceChainLink);
INSERT INTO MicroServiceChainLinksExitCodes (pk, microServiceChainLink, exitCode, nextMicroServiceChainLink)
    VALUES (@MicroServiceChainLinksExitCodes, @MicroServiceChainLink, 0, @NextMicroServiceChainLink2);
SET @NextMicroServiceChainLink = @MicroServiceChainLink;


-- assign faux file UUIDs --
SET @TasksConfig = '';
SET @TasksConfigPKReference = '';
SET @MicroServiceChainLink = '';
SET @MicroServiceChainLinksExitCodes = '';
SET @defaultNextChainLink = @MoveTransferToFailedLink;

INSERT INTO StandardTasksConfigs (pk, filterFileEnd, filterFileStart, filterSubDir, requiresOutputLock, standardOutputFile, standardErrorFile, execute, arguments)
    VALUES (@TasksConfigPKReference, NULL, NULL, NULL, FALSE, NULL, NULL, 'assignFauxFileUUIDs_v0.0', '"%SIPUUID%" "TRIM"');
INSERT INTO TasksConfigs (pk, taskType, taskTypePKReference, description)
    VALUES
    (@TasksConfig, '36b2e239-4a57-4aa5-8ebc-7a29139baca6', @TasksConfigPKReference, 'Assign file UUIDs');
INSERT INTO MicroServiceChainLinks (pk, microserviceGroup, currentTask, defaultNextChainLink)
    VALUES (@MicroServiceChainLink, @microserviceGroup, @TasksConfig, @defaultNextChainLink);
INSERT INTO MicroServiceChainLinksExitCodes (pk, microServiceChainLink, exitCode, nextMicroServiceChainLink)
    VALUES (@MicroServiceChainLinksExitCodes, @MicroServiceChainLink, 0, @NextMicroServiceChainLink);
SET @NextMicroServiceChainLink = @MicroServiceChainLink;


-- determin AIP version --
SET @TasksConfig = '';
SET @TasksConfigPKReference = '';
SET @MicroServiceChainLink = '';
SET @MicroServiceChainLinksExitCodes = '';
SET @defaultNextChainLink = @MoveTransferToFailedLink;

INSERT INTO StandardTasksConfigs (pk, filterFileEnd, filterFileStart, filterSubDir, requiresOutputLock, standardOutputFile, standardErrorFile, execute, arguments)
    VALUES (@TasksConfigPKReference, NULL, NULL, NULL, FALSE, NULL, NULL, 'archivematicaSetTransferType_v0.0', '"%SIPUUID%" "TRIM"');
INSERT INTO TasksConfigs (pk, taskType, taskTypePKReference, description)
    VALUES
    (@TasksConfig, '36b2e239-4a57-4aa5-8ebc-7a29139baca6', @TasksConfigPKReference, 'Determin processing path for this AIP version.');
INSERT INTO MicroServiceChainLinks (pk, microserviceGroup, currentTask, defaultNextChainLink)
    VALUES (@MicroServiceChainLink, @microserviceGroup, @TasksConfig, @defaultNextChainLink);
INSERT INTO MicroServiceChainLinksExitCodes (pk, microServiceChainLink, exitCode, nextMicroServiceChainLink)
    VALUES (@MicroServiceChainLinksExitCodes, @MicroServiceChainLink, 100, @NextMicroServiceChainLink);
INSERT INTO MicroServiceChainLinksExitCodes (pk, microServiceChainLink, exitCode, nextMicroServiceChainLink)
    VALUES (@MicroServiceChainLinksExitCodes, @MicroServiceChainLink, 0, @MoveTransferToFailedLink);
SET @NextMicroServiceChainLink = @MicroServiceChainLink;

-- SET Permissions --
SET @TasksConfig = '10846796-f1ee-499a-9908-4c49f8edd7e6';
SET @MicroServiceChainLink = '';
SET @MicroServiceChainLinksExitCodes = '';
SET @defaultNextChainLink = @MoveTransferToFailedLink;
SET @MicroServiceChain = '';

INSERT INTO MicroServiceChainLinks (pk, microserviceGroup, currentTask, defaultNextChainLink)
    VALUES (@MicroServiceChainLink, @microserviceGroup, @TasksConfig, @defaultNextChainLink);
INSERT INTO MicroServiceChainLinksExitCodes (pk, microServiceChainLink, exitCode, nextMicroServiceChainLink)
    VALUES (@MicroServiceChainLinksExitCodes, @MicroServiceChainLink, 0, @NextMicroServiceChainLink);
SET @NextMicroServiceChainLink = @MicroServiceChainLink;

INSERT INTO MicroServiceChains (pk, startingLink, description)
    VALUES (@MicroServiceChain, @MicroServiceChainLink, 'Create DIP from AIP');


-- approve transfer --
SET @TasksConfigPKReference = NULL;
SET @TasksConfig = '';
SET @MicroServiceChainLink = '';
SET @MicroServiceChainLinksExitCodes = '';
SET @defaultNextChainLink = @NextMicroServiceChainLink;
SET @rejectTransferMicroserviceChain = '1b04ec43-055c-43b7-9543-bd03c6a778ba';
SET @MicroServiceChainChoice1 = '';
SET @MicroServiceChainChoice2 = '';


INSERT INTO TasksConfigs (pk, taskType, taskTypePKReference, description)
    VALUES
    (@TasksConfig, '61fb3874-8ef6-49d3-8a2d-3cb66e86a30c', @TasksConfigPKReference, 'Create DIP from AIP');
INSERT INTO MicroServiceChainLinks (pk, microserviceGroup, currentTask, defaultNextChainLink)
    VALUES (@MicroServiceChainLink, @microserviceGroup, @TasksConfig, @defaultNextChainLink);
SET @NextMicroServiceChainLink = @MicroServiceChainLink;

INSERT INTO MicroServiceChainChoice (pk, choiceAvailableAtLink, chainAvailable)
    VALUES (@MicroServiceChainChoice1, @MicroServiceChainLink, @MicroServiceChain);
INSERT INTO MicroServiceChainChoice (pk, choiceAvailableAtLink, chainAvailable)
    VALUES (@MicroServiceChainChoice2, @MicroServiceChainLink, @rejectTransferMicroserviceChain);
    
SET @MicroServiceChain = '';
INSERT INTO MicroServiceChains (pk, startingLink, description)
    VALUES (@MicroServiceChain, @MicroServiceChainLink, 'createDIPFromAIP-wdChain');

-- create watched directory --
SET @WatchedDirectory = '';
INSERT INTO WatchedDirectories (pk, watchedDirectoryPath, chain, onlyActOnDirectories, expectedType)
    VALUES (@WatchedDirectory, '%watchDirectoryPath%system/createDIPFromAIP/', @MicroServiceChain, 1, '76e66677-40e6-41da-be15-709afb334936');
    
-- /issue-1843


